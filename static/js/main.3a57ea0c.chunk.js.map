{"version":3,"sources":["Components/Spinner.js","Components/Lstorage.js","Components/Lyrics.js","Components/Display.js","Components/Search.js","Components/Context.js","Components/trail.js","Components/Head.js","App.js","index.js","Components/triangle.gif"],"names":["Spinner","src","spinner","alt","style","width","margin","display","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Lyrics","props","data","setData","Err","setErr","useEffect","Fetch","a","Axios","get","match","params","id","then","res","result","message","body","lyrics","catch","err","Show","undefined","Object","keys","length","to","Button","startIcon","color","size","variant","className","lyrics_body","lyrics_copyright","Display","track","album","artist","t_id","onClick","Set","path","component","Search","setRes","setError","song","setSong","spin","setSpin","track_list","TextField","label","placeholder","onChange","e","target","map","val","index","artist_name","track_name","album_name","track_id","Track","createContext","Try","t","setTrack","Top","Provider","children","Trail","useContext","Head","href","Paper","square","Tabs","indicatorColor","textColor","centered","exact","activeClassName","Tab","icon","active","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3a57ea0c.chunk.js","sourcesContent":["import React from 'react'\r\nimport spinner from './triangle.gif'\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <>\r\n            <img src={spinner} alt='loading'\r\n             style={{\r\n                    width:'70px',\r\n                     margin:'40px auto',\r\n                     display:'block',\r\n            }}></img>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import { useState } from 'react';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import React, { useEffect,useState } from 'react'\r\nimport Axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport Spinner from './Spinner'\r\nimport Button from '@material-ui/core/Button';\r\nimport * as Mat from '@material-ui/icons'\r\nimport useLocalStorage from './Lstorage'\r\n\r\n\r\n\r\nfunction Lyrics(props) {\r\n    const [data,setData]=useLocalStorage('data',{});\r\n    const [Err, setErr] = useState();\r\n\r\n    useEffect( ()=>{\r\n           Fetch();\r\n    },[]);\r\n    \r\n      let apiKey= '0f721c28a837fc8fd3d2d83f073539eb';\r\n        \r\n                const Fetch = async()=>{\r\n                    await Axios\r\n           .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${props.match.params.id}&apikey=${apiKey}`)\r\n            .then( res=>{ \r\n                let result = res.data.message.body.lyrics;\r\n                setData(result);\r\n                        \r\n            })\r\n            .catch(err=>{\r\n                setErr(`Try again,${err}`);\r\n            });\r\n                }\r\n         \r\nconst Show = ()=>{ \r\n   if(\r\n       data===undefined ||\r\n       Object.keys(data).length ===0\r\n   ){\r\n       return(\r\n           <Spinner/>\r\n       );\r\n   }else{\r\n         return( \r\n             <>\r\n         <Link to='/'>\r\n        <Button  startIcon={<Mat.ArrowBackOutlined/>} \r\n                color=\"secondary\"\r\n                size='small'\r\n                variant='outlined' >\r\n           Go Back\r\n      </Button>\r\n        </Link>\r\n        <h2>{Err}</h2>\r\n                        <div className='lyrics'>\r\n                            <h2 className='song'>Lyrics:</h2>\r\n                            <p className='info'>{data.lyrics_body}</p>\r\n                            <h2 className='song'>Copyright:</h2>\r\n                            <p className='info'>{data.lyrics_copyright}</p>\r\n                            </div>\r\n        </>\r\n         );\r\n\r\n   }\r\n    \r\n}\r\nreturn(\r\n    <>\r\n    <Show/>\r\n    </>\r\n)\r\n}\r\nexport default Lyrics;\r\n","import React from 'react'\r\nimport {Route,Switch,Link} from 'react-router-dom'\r\nimport Lyrics from './Lyrics'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Display(props) {\r\n    return (\r\n        <>\r\n                            <div className='track'>\r\n                                <h3 className='song'>{props.track}</h3>\r\n                                <h4 className='info'>Album: {props.album}</h4>\r\n                                <h4 className='info'>Artist: {props.artist}</h4>\r\n                                <Link to={`/lyrics/${props.t_id}`} >\r\n                                <Button color=\"primary\" onClick={Set} >\r\n                                     Get Lyrics\r\n                                </Button>\r\n                                </Link>\r\n                            </div>\r\n            <Switch>\r\n                <Route path='/lyrics/:id' component={Lyrics}/>\r\n            </Switch>\r\n                   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import React, {useState} from 'react'\r\nimport Axios from 'axios'\r\nimport Display from './Display';\r\nimport * as Mat from '@material-ui/icons'\r\nimport Spinner from './Spinner'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport useLocalStorage from './Lstorage'\r\n\r\n\r\nfunction Search() {\r\n    const [res,setRes] = useLocalStorage('res',[]);\r\n    const [Err,setError] = useState();\r\n    const [song,setSong] = useState();\r\n    const [spin, setSpin] = useState(false);\r\n\r\n    const Song = (e)=>{\r\n        setSong(e.target.value);\r\n    }\r\n    const DoSearch=()=>{\r\n        setSong('');\r\n        Search();\r\n        setSpin(true);\r\n    }\r\n   \r\n    const Search =  async()=>{\r\n        let apiKey= '0f721c28a837fc8fd3d2d83f073539eb';\r\n        await Axios\r\n        .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?\r\n        q_track=${song}&page=1&page_size=5&s_track_rating=desc&apikey=${apiKey}`)\r\n        .then(res=>{\r\n            setRes(res.data.message.body.track_list);\r\n           \r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            setError(`Try Again,${err}`);\r\n        });\r\n       console.log(song);\r\n        res===''?setSpin(true):setSpin(false);\r\n        }\r\n        console.log(spin);\r\n        //console.log(props.song);\r\n    return (\r\n        <>\r\n        <div className='header'>\r\n\r\n        <h2>\r\n            <Mat.MusicNoteTwoTone/>\r\n                Enter the Name of the Song\r\n            <Mat.MusicNoteTwoTone/>\r\n        </h2>\r\n        <br/>\r\n        <div className='input'>\r\n        <TextField\r\n          label=\"Enter Song Name\"\r\n          id=\"outlined-size-small\"\r\n          placeholder='Enter Name of the song'\r\n          onChange={Song}\r\n          value={song}\r\n          variant=\"outlined\"\r\n          size='small'\r\n        />\r\n        </div>\r\n        <div className='btn'>\r\n         <Button  variant=\"outlined\" onClick={DoSearch} color=\"secondary\">\r\n            Search\r\n         </Button>\r\n         </div>\r\n        </div>\r\n           \r\n            <h3>\r\n                {Err}\r\n            </h3>\r\n             <div className='tracks'>\r\n                {\r\n                    res.map((val,index)=>{\r\n                        return(\r\n                       \r\n                            <Display\r\n                            artist={val.track.artist_name}\r\n                            track={val.track.track_name}\r\n                            key={index}\r\n                            album={val.track.album_name}\r\n                            t_id={val.track.track_id}\r\n                            />\r\n                       \r\n                        \r\n                        )\r\n                    })\r\n                }    \r\n             </div>\r\n      { spin?<Spinner/>:''}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { createContext, useState ,useEffect} from 'react'\r\nimport Axios from 'axios'\r\n\r\nexport const Track = createContext();\r\nfunction Try(props) {\r\n    const [value,setvalue] = useState();\r\n    const [t,setTrack] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        Top();\r\n    }, [])\r\n    const Top = async()=>{\r\n        let apiKey= '0f721c28a837fc8fd3d2d83f073539eb';\r\n            await Axios\r\n           .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?\r\n           page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${apiKey}`)\r\n           .then( res=>{\r\n               let track_list = res.data.message.body.track_list;\r\n               setTrack(track_list);\r\n               console.log(res);    \r\n           })\r\n           .catch (err=>{\r\n                 console.log(err);\r\n            });\r\n        }    \r\n      \r\n    return (\r\n        <>\r\n        <Track.Provider value={[t,setTrack]}>\r\n                {props.children}\r\n        </Track.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Try\r\n","import React,{ useContext, useState} from 'react'\r\nimport Display from './Display'\r\nimport Spinner from './Spinner';\r\nimport { Track } from './Context';\r\n\r\n\r\n\r\nfunction Trail() {\r\n   const [Err, setError] = useState();\r\n   const [t,setTrack] = useContext(Track);\r\n   \r\n\r\n    return (\r\n        <> \r\n        <div className='header'>\r\n            <h2>Top 20 Tracks</h2>\r\n        </div>\r\n        <h2>{Err}</h2>\r\n        <div className='tracks'>\r\n           {\r\n                t.map((val,index)=>{\r\n                    return(\r\n                        <Display\r\n                        artist={val.track.artist_name}\r\n                        track={val.track.track_name}\r\n                        key={index}\r\n                        album={val.track.album_name}\r\n                        t_id={val.track.track_id}\r\n                        />\r\n                    );\r\n                })   \r\n           }\r\n                \r\n        </div>\r\n        { t===''?<Spinner/>:''}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Trail\r\n","import React from 'react'\r\nimport Search from './Search'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport Trail from './trail'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Lyrics from './Lyrics'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport * as Mat from '@material-ui/icons'\r\nimport './head.css'\r\n\r\n\r\nfunction Head() {\r\n    return (\r\n        <>\r\n           <h1>LyricFinder\r\n              <span className='git'> \r\n                <a  href='https://github.com/ckr-Harsh'>\r\n                <Mat.GitHub className='github'/>\r\n                </a>\r\n              </span>\r\n           </h1>\r\n           <nav>\r\n           <Paper square className='navbar'>\r\n        <Tabs \r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          centered\r\n   \r\n        >\r\n          <NavLink to='/' exact activeClassName='active'>\r\n           <Tab icon={<Mat.List/>} label='Top Tracks'/>\r\n          </NavLink>\r\n          <NavLink to='/search'exact activeClassName='active'>\r\n            <Tab icon={<Mat.Search/>} label='Search'/>\r\n          </NavLink>\r\n           </Tabs>\r\n          </Paper>\r\n           </nav>\r\n\r\n            <div className='router'>\r\n              <Switch>\r\n                    <Route active exact path='/'component={Trail}/>\r\n                    <Route exact path='/search' component={Search}/>\r\n                    <Route path='/lyrics/:id' component={Lyrics}/>\r\n              </Switch>\r\n            </div>\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Head\r\n","import React from 'react'\r\nimport Head from './Components/Head'\r\nimport Try from './Components/Context'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n \r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <BrowserRouter>\r\n    <Try>\r\n      <Head/>\r\n      </Try>\r\n    </BrowserRouter>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/triangle.894673b4.gif\";"],"sourceRoot":""}